openapi: 3.0.1
info:
  version: 1.0.0
  title: Gestão de crédito
  description: |
    A análise de crédito do Bankly opera por meio da gestão de contratos. Essa gestão é responsável por analisar a elegibilidade de clientes para conceder crédito, originar contratos de crédito, gerir os contratos concedidos, cancelar contratos quando solicitado pelo parceiro, revisar os limites dos contratos. Consulte também nossa
    [documentação](https://bankly.readme.io/v1.0/docs/) para mais detalhes sobre os fluxos de negócio.
servers:
  - url: 'https://bsp.sandbox.bankly.com.br'
paths:
  /cards/credits/customers:
    post:
      tags:
        - Análise de crédito 
      summary: Criação de análise de crédito
      description: |
        <div class="bkly-ref-description">
          <p>Antes de emitir um cartão de crédito, solicite uma análise de crédito para seu cliente.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> <span class="bkly-ref-scope-tag">scope: credit.write</span>
        </div>
      operationId: creditAnalysisCreate
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createCustomerRequest"
      responses:
        "202":
          description: A solicitação foi aceita e a análise de crédito foi criada.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/createCustomerResponse"
              examples:
                response:
                  value:
                    companyKey: "ACESSO"
                    document: "12345678900"
                    contract: "000010"
        '401':
          $ref: 'http://localhost:3320/commons/components#/components/responses/401'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/422'

  /cards/credits/terms-and-conditions/acceptance:
    post:
      tags:
        - Análise de crédito 
      summary: Aceite da proposta do contrato de crédito
      description: |
        <div class="bkly-ref-description">
          <p>Envie o aceite da proposta já aprovada de um contrato de crédito.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> <span class="bkly-ref-scope-tag">scope: credit.write</span>
        </div>
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/acceptanceContractRequest"
      responses:
        '202':
          description: O aceite da proposta do contrato de crédito foi enviado com sucesso.
        '401':
          $ref: 'http://localhost:3320/commons/components#/components/responses/401'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/409'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'

  /cards/credits/document/{documentNumber}/contracts/{contract}:
    get:
      tags:
        - Análise de crédito
      summary: Consulta de contrato de crédito 
      description: |
        <div class="bkly-ref-description">
          <p>Consulte um contrato de crédito já existente.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> <span class="bkly-ref-scope-tag">scope: credit.read</span>
        </div>
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
        - name: documentNumber
          in: path
          required: true
          description: Número do documento do cliente (CPF ou CNPJ).
          schema:
            type: string
        - name: contract
          in: path
          description: Número do contrato de crédito do cliente.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Retorno com informações do contrato de crédito especificado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/getContractCreditResponse"
        '401':
          $ref: 'http://localhost:3320/commons/components#/components/responses/401'
        '500':
          $ref: 'http://localhost:3320/commons/components#/components/responses/500'

  /cards/credits/document/{documentNumber}/contracts/{contract}/reanalyze:
    put:
      tags:
        - Análise de crédito 
      summary: Reanálise do limite de contrato de crédito
      description: |
        <div class="bkly-ref-description">
          <p>Solicite a reanálise do limite de contrato de crédito do seu cliente.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> <span class="bkly-ref-scope-tag">scope: credit.write</span>
        </div>
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
        - name: documentNumber
          in: path
          required: true
          description: Número do documento do cliente (CPF ou CNPJ).
          schema:
            type: string
        - name: contract
          in: path
          description: Número do contrato de crédito do cliente.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReanalyzeCreditDto"
      responses:
        '202':
          description: A solicitação de reanálise do limite foi criada.
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '404':
          $ref: 'http://localhost:3320/commons/components#/components/responses/404'
        '406':
          $ref: 'http://localhost:3320/commons/components#/components/responses/406'

  /cards/credits/document/{documentNumber}/contracts/{contract}/acceptance:
    put:
      tags:
        - Análise de crédito 
      summary: Aceite do novo limite de contrato de crédito
      description: |
        <div class="bkly-ref-description">
          <p>Após o pedido de reanálise ser aprovado, o cliente do parceiro deverá aceitar a nova proposta de limite de contrato de crédito.</p> 
          <span class="bkly-ref-small-stable-tag">stable</span> <span class="bkly-ref-scope-tag">scope: credit.write</span>
        </div>
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
        - name: documentNumber
          in: path
          required: true
          description: Número do documento do cliente (CPF ou CNPJ).
          schema:
            type: string
        - name: contract
          in: path
          description: Número do contrato de crédito do cliente.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AcceptCreditLimitIncreaseDto"
      responses:
        '202':
          description: O aceite da nova proposta do contrato de crédito foi enviado com sucesso.
        '400':
          $ref: 'http://localhost:3320/commons/components#/components/responses/400'
        '404':
          $ref: 'http://localhost:3320/commons/components#/components/responses/404'

  /credits/customer:
    post:
      tags:
        - Contrato de crédito 
      summary: Criação de contrato de crédito
      description: |
        <div class="bkly-ref-description">
          <p>[BETA] Inicie o processo de criação de contrato de crédito de seu cliente sem a necessidade de passar pelo motor de decisão do Bankly.</p> 
          <b>Scope: credit.provider.write</b>
        </div>
        [block:callout]
        {
          "type": "info",
          "title": "Nota",
          "body": "Para mais informações, confira a documentação [Criação de contrato de crédito](https://bankly-bsp.readme.io/docs/criacao-de-contrato-de-credito)."
        }
        [/block]
      parameters:
        - $ref: "#/components/parameters/apiVersion"
        - $ref: "#/components/parameters/authorization"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCreditContractRequest"
      responses:
        '202':
          description: "A solicitação foi aceita e o processo de criação de contrato de crédito foi iniciado."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateContractResponse"
        '404':
          $ref: 'http://localhost:3320/commons/components#/components/responses/404'
        '409':
          $ref: 'http://localhost:3320/commons/components#/components/responses/404'
        '422':
          $ref: 'http://localhost:3320/commons/components#/components/responses/404'
          
security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  
  parameters:
    apiVersion:
      name: api-version
      in: header
      required: true
      schema:
        type: string
        
    authorization:
      name: Authorization
      in: header
      required: true
      schema:
        type: string 

    DocumentNumber:
      name: documentNumber
      in: path
      required: true
      schema:
        type: string
        nullable: true

    Proxy:
      name: proxy
      in: path
      required: true
      schema:
        type: string
        nullable: true

  schemas:
    
    CreateContractAddress:
      type: object
      description: Objeto que deverá conter os dados do endereço do cliente.
      properties:
        zipCode:
          type: string
          description: Código postal do endereço.
          example: "13843456"
        addressLine:
          type: string
          description: Logradouro (nome da rua, avenida etc.).
          example: Rua dos Exemplos, 123
        buildingNumber:
          type: string
          description: Número do imóvel.
          example: "123"
        complement:
          type: string
          description: "Complemento do endereço. Exemplo: Apto 123, Casa B etc."
          example: Next to ht bakery
        neighborhood:
          type: string
          description: Nome do bairro ou distrito.
          example: "123"
        city:
          type: string
          description: Nome da cidade.
          example: São Paulo
        state:
          type: string
          description: Sigla do estado brasileiro conforme a ISO 31666-2:BR.
          example: SP
        country:
          type: string
          description: Nome do país.
          example: BR
      required:
        - zipCode
        - addressLine
        - neighborhood
        - city
        - state
        - country

    CreateContractPhone:
      type: object
      description: Objeto que deverá conter os dados do telefone do cliente.
      properties:
        phoneType:
          type: string
          description: Tipo de telefone.
          enum:
            - Residential
            - Commercial
            - Mobile
          example: Mobile
        value:
          type: string
          description: Número do telefone.
          example: "11911111111"
        countryCode:
          type: string
          description: Código DDI do país.
          example: "55"
      required:
        - phoneType
        - value
        - countryCode
    
    CreateContractSCR:
      type: object
      description: Objeto que deverá conter informações sobre a resposta do cliente quanto à consulta ao SCR (Sistema de Informação de Crédito do Bacen).
      properties:
        collectedAt:
          type: string
          format: date-time
          description: Data de coleta da resposta do cliente.
        authorized:
          type: boolean
          description: Indica se o cliente autorizou (true) ou não (false) a consulta ao SCR.
    
    CreateContractLimitApproved:
      type: object
      description: Objeto que deverá conter informações do limite sugerido.
      properties:
        approvedAt: 
          type: string
          format: date-time
          description: Data de aprovação do crédito.
        value: 
          type: string
          description: Valor do limite.
        currency: 
          type: string
          default: BRL
          description: Sigla da moeda utilizada.
      required:
        - approvedAt
        - value
        - currency
    
    CreateContractAccept:
      type: object
      description: Informações do aceite do cliente do parceiro.
      properties:
        acceptedAt: 
          type: string
          format: date-time
          description: Data do aceite do cliente do parceiro.
        dataHash: 
          type: string
          description: Hash contendo os termos e condições aceitos pelo cliente.
      required:
        - acceptedAt
    
    CreateCreditContractRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome do cliente.
          example: Nísia Floresta
        socialName:
          type: string
          description: Nome pelo qual a pessoa gostaria de ser chamada.
          example: Nísia Floresta
        motherName:
          type: string
          description: Nome da mãe do cliente como consta no documento de identidade. Também é possível incluir o nome que consta no campo "Filiação" dos documentos de identificação.
          example: Dionísia Gonçalves Pinto
        profession:
          type: string
          description: Profissão do cliente.
          example: Engineer
        birthDate:
          type: string
          format: date-time
          description: Data de nascimento do cliente.
          example: 1810-12-10T15:21:47.549Z
        email:
          type: string
          description:  Endereço de e-mail do cliente.
          example: nisia.floresta@bankly.com.br
        programId:
          type: number
          description: Identificador do programa.
          example: 101
        address:
          description: Objeto que deverá conter os dados do endereço do cliente.
          example:
            zipCode: "68060100"
            addressLine: "Rua 6 de Março, 2500"
            buildingNumber: "2500"
            complement: "Next to the bakery"
            neighborhood: "Alter do Chão"
            city: "Santarém"
            state: "PA"
            country: "BR"
          allOf:
            - $ref: "#/components/schemas/CreateContractAddress"
        phone:
          description: Objeto que deverá conter os dados do telefone do cliente.
          example:
            phoneType: Mobile
            value: "23415162342"
            countryCode: "55"
          allOf:
            - $ref: "#/components/schemas/CreateContractPhone"
        maritalStatus:
          type: string
          description: Estado civil do cliente
          enum:
            - Single
            - Married
            - Separated
            - Divorced
            - Widower
          example: Single
        incomeBracket:
          type: string
          description: Renda salarial do cliente.
          enum:
            - LessThousand
            - FromThousandToTwoThousand
            - FromTwoThousandToThreeThousand
            - FromThreeThousandToFiveThousand
            - FromFiveThousandToTenThousand
            - FromTenThousandToTwentyThousand
            - OverTwentyThousand
          example: FromFiveThousandToTenThousand
        academicDegree:
          type: string
          description: Grau de instrução do cliente
          enum:
            - HighSchool
            - Graduated
            - PostGraduate
            - Masters
            - Doctorate
          example: Graduated
        sex:
          type: string
          description: Gênero do cliente.
          enum:
            - Male
            - Female
            - Other
          example: Female
        documentNumber:
          type: string
          description: Número do documento (CPF ou CNPJ).
          example: "48151623"
        limitApproved:
          description: Objeto que deverá conter informações do limite sugerido.
          example:
            approvedAt: 2023-09-27T03:00:00.000Z
            value: 500
            currency: BRL
          allOf:
            - $ref: "#/components/schemas/CreateContractLimitApproved"
        scr:
          description: Objeto que deverá conter informações sobre a resposta do cliente quanto à consulta ao SCR (Sistema de Informação de Crédito do Bacen).
          example:
            collectedAt: 2023-09-27T03:00:00.000Z
            authorized: true
          allOf:
            - $ref: "#/components/schemas/CreateContractSCR"
        accept:
          description: Informações do aceite do cliente do parceiro.
          example:
            acceptedAt: 2023-09-27T03:00:00.000Z
            dataHash: '{"foo": "bar"}'
          allOf:
            - $ref: "#/components/schemas/CreateContractAccept"
      required:
        - email
        - programId
        - address
        - phone
        - documentNumber
        - limitApproved
        - accept

    CreateContractResponse:
      type: object
      properties:
        document:
          type: string
          description: Número de documento de CPF ou CNPJ.
          example: "47742663023"
        contract:
          type: string
          description: Número do contrato de crédito criado.
          example: "000010"
        companyKey:
          type: string
          description: Chave que identifica o parceiro dentro do Bankly.
          example: "FLORESTA_ED"

    createCardsInLotRequest:
      type: object
      properties:
        programId:
          type: integer
          description: Identificador do programa que será vinculado ao cartão.
        quantityCards:
          type: integer
          description: Quantidade de cartões em lote (informar um valor acima de 0 e menor que 2000).
        paymentDay:
          type: integer
          description: Dia de pagamento do cartão.
        address:
          type: object
          description: Informações sobre o endereço de entrega.
          properties:
            zipCode:
              type: string
              description: CEP (informar somente os números).
            address:
              type: string
              description: Logradouro.
            number:
              type: string
              description: Número.
            neighborhood:
              type: string
              description: Bairro.
            complement:
              type: string
              description: Complemento.
            city:
              type: string
              description: Cidade.
            state:
              type: string
              description: Estado (informar a UF).
            country:
              type: string
              description: País.
          required:
            - zipCode
            - address
            - number
            - neighborhood
            - city
            - state
            - country
      required:
        - programId
        - quantityCards
        - address
    
    createCardInLotResponse:
      type: object
      properties:
        lotId:
          type: string
          description: Id do lote.

    cardLotsResponse:
      type: array
      items:
        type: object
        properties:
          lotId:
            type: string
            description: Id do lote.
          quantityOrder:
            type: integer
            description: Quantidade de cartões solicitados.    
          dateOrder:
            type: string
            description: Data da solicitação de criação do lote.
          programId:
            type: integer
            description: Identificador do programa vinculado ao cartão.

    cardLotResponse:
      type: object
      properties:
        lotId:
          type: string
          description: Id do lote.
        quantityOrder:
          type: integer
          description: Quantidade de cartões solicitados.
        dateOrder:
          type: string
          description: Data da solicitação de criação do lote.
        programId:
          type: integer
          description: Identificador do programa vinculado ao cartão.
        cards: 
          type: array
          description: Proxy dos cartões.
        address:
          type: object
          description: Informações sobre o endereço de entrega.
          properties:
            zipCode:
              type: string
              description: CEP.
            address:
              type: string
              description: Logradouro.
            number:
              type: string
              description: Número.
            neighborhood:
              type: string
              description: Bairro.
            complement:
              type: string
              description: Complemento.
            city:
              type: string
              description: Cidade.
            state:
              type: string
              description: Estado (formato UF).
            country:
              type: string
              description: País.
    
    bindNoNameRequest:
      type: object
      properties:
        password:
          type: string
          description: Senha que será utilizada nas compras (4 dígitos).
        bankAccount:
          type: string
          description: Número da conta ao qual o cartão será vinculado.
        bankAgency:
          type: string
          description: Número da agência (4 dígitos) do banco ao qual a conta pertence.
        documentNumber:
          type: string
          description: Número do documento (CPF ou CNPJ) do titular da conta. Informe somente números. Tamanho máximo de 14 caracteres.
        alias:
          type: string
          description: Apelido do cartão (não é permitido o uso de caracteres especiais e o tamanho máximo é de 16 caracteres).    
      required:
        - documentNumber
        - password
        - bankAccount
        - bankAgency
    
    
    academicDegree:
      type: string
      description: Grau de instrução do cliente.
      enum:
        - HighSchool
        - Graduated
        - PostGraduate
        - Masters
        - Doctorate
   
    acceptanceContractRequest:
      type: object
      properties:
        documentNumber:
          type: string
          description: Número de documento (CPF ou CNPJ). Informe somente números.
        contract:
          type: string
          description: Número do contrato de crédito.
        dataHash:
          type: string
          description: Termos e condições aceitos pelo cliente.
      required:
        - documentNumber
        - contract
        - dataHash
    
    acceptanceTerm:
      type: object
      properties:
        signedAt:
          type: string
          description: Data e hora em que o contrato de crédito foi aceito/assinado.
        creditDetails:
          type: object
          properties:
            diaryIof:
              type: number
              description: Valor diário do Imposto sobre Operações Financeiras (IOF).
            fixedIof:
              type: number
              description: Valor fixo do Imposto sobre Operações Financeiras (IOF).
            internationalIof:
              type: number
              description: Valor internacional do Imposto sobre Operações Financeiras (IOF).
            daysAdvanceCut:
              type: integer
              description: Quantidade de dias, a partir do dia de vencimento, até o fechamento da fatura.
            futureCalendarMonths:
              type: integer
              description: Número de faturas pré-cadastradas na base de criação da conta.
            daysAccountLockDelay:
              type: integer
              description: Quantidade de dias após o atraso no pagamento da fatura em que será realizado o bloqueio do cartão.
            accrualStop:
              type: integer
              description: Quantidade de dias, após o atraso no pagamento da fatura, para que o cliente entre em negociação de dívida.
            delayInvoiceRate:
              type: number
              description: Valor cobrado pelo atraso do pagamento da fatura (além dos juros).
            rotatingRate:
              type: number
              description: Taxa de juros cobrada para faturas não pagas ou pagas parcialmente.
            minimumValueOfRefinanceInstallment:
              type: number
              description: Valor mínimo de parcela para faturas que terão o pagamento parcelado.
            invoiceRefinanceRate:
              type: number
              description: Valor cobrado pelo parcelamento do pagamento da fatura (além dos juros).
            maximumNumberInstallmentsRefinance:
              type: integer
              description: Número máximo de parcelas para pagamento parcelado da fatura.
            annualValue:
              type: number
              description: Valor cobrado anualmente para que o cliente tenha o cartão ativo.
            annuityInstallments:
              type: integer
              description: Número máximo de parcelas no qual o valor da anuidade pode ser dividido.
            iofFirstDay:
              type: boolean
              description: Indica se o cálculo de IOF será feito no primeiro dia do mês (true) ou na data de corte da fatura (false).
            minimumAmountInstallmentAgreementInvoice:
              type: number
              description: Valor mínimo referente ao pagamento da fatura após o início da fase de negociação.
            minimumEntryInvoiceAgreement:
              type: number
              description: Valor mínimo referente ao pagamento da fatura no início da fase de negociação.
            maximumEntryInvoiceAgreement:
              type: number
              description: Valor máximo referente ao pagamento da fatura no início da fase de negociação.
            minimumPercentageInvoiceAgreement:
              type: number
              description: Taxa mínima referente ao pagamento da fatura no início da fase de negociação.
            maximumEntryAgreementInvoicePercentage:
              type: number
              description: Taxa máxima referente ao pagamento da fatura no início da fase de negociação.
            deadlineInDaysForNewAnalysisRequest:
              type: integer
              description: Quantidade de dias em que o cliente pode solicitar uma nova avaliação, após a reprovação do crédito.
            deadlineInDaysForExpirationOfAnalysis:
              type: integer
              description: Quantidade de dias em que o cliente pode solicitar uma nova avaliação, após a aprovação do crédito.
        dataHash:
          type: string
          description: Termos e condições aceitos pelo cliente.
    
    activateCardRequest:
      type: object
      properties:
        activateCode:
          type: string
          description: Código de ativação do cartão (12 caracteres).
        password:
          type: string
          description: Senha de uso do cartão (4 dígitos).
      required:
        - activateCode
        - password
    
    addressRequest:
      type: object
      description: Endereço do cliente.
      required:
        - zipCode
        - addressLine
        - neighborhood
        - city
        - state
        - country
      properties:
        zipCode:
          type: string
          description: CEP de endereço.
        addressLine:
          type: string
          description: Logradouro (nome da rua, avenida etc.).
        buildingNumber:
          type: string
          description: Número do endereço.
        complement:
          type: string
          description: Complemento do endereço.
        neighborhood:
          type: string
          description: Bairro do endereço.
        city:
          type: string
          description: Cidade do endereço.
        state:
          type: string
          description: Estado do endereço.
        country:
          type: string
          description: País do endereço.

    address:
      type: object
      description: Endereço do cliente.
      properties:
        zipCode:
          type: string
          description: CEP de endereço.
        addressLine:
          type: string
        buildingNumber:
          type: string
          description: Número do endereço.
        complement:
          type: string
          description: Complemento do endereço.
        neighborhood:
          type: string
          description: Bairro do endereço.
        city:
          type: string
          description: Cidade do endereço.
        state:
          type: string
          description: Estado do endereço.
        country:
          type: string
          description: País do endereço.
    
    brandTypes:
      type: string
      enum:
        - Mastercard
      
    cardBuildingResponse:
      type: object
      properties:
        proxy:
          type: string
          description: Proxy do cartão criado.
        activateCode:
          type: string
          description: Código para ativar o cartão.
              
    cardErrorResponse:
      type: object
      properties:
        reference:
          type: string
          description: Link para documentação de integração.
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Código de erro.
              message:
                type: string
                description: Mensagem explicativa do erro.
    
    cardResponse:
      type: object
      properties:
        created:
          type: string
          description: Proxy do cartão criado (formato 'yyyy-MM-ddTHH:mm:ss').
        companyKey:
          type: string
          description: Identificador da companhia.
        documentNumber:
          type: string
          description: Número do documento do cliente (CPF/CNPJ).
        activateCode:
          type: string
          description: Código de ativação do cartão.
        bankAgency:
          type: string
          description: Número da agência do cliente.
        bankAccount:
          type: string
          description: Número da conta do cliente.
        lastFourDigits:
          type: string
          description: Últimos 04 dígitos do cartão.
        proxy:
          type: string
          description: Identificador do cartão.
        name:
          type: string
          description: Nome impresso no cartão.
        alias:
          type: string
          description: Apelido impresso no cartão.
        cardType:
          type: string
          $ref: "#/components/schemas/cardTypes"
          description: Tipo do cartão.
        physicalBinds: 
          type: array
          description: Dados do cartão físico.
          items:
            type: object
            properties:
              proxy: 
                type: string
                description: Identificador do cartão físico.
              created: 
                type: string
                description: Data do cartão criado (formato 'yyyy-MM-ddTHH:mm:ss').
        virtualBind: 
          type: object
          properties:
            proxy: 
              type: string
              description: Identificador do cartão virtual.
            created: 
              type: string
              description: Data do cartão criado (formato 'yyyy-MM-ddTHH:mm:ss').
        status:
          type: string
          $ref: "#/components/schemas/cardStatus"
          description: Status atual do cartão.
        allowContactless:
          type: boolean
          description: Informa status da função contactless.
        address:
          type: object
          properties:
            zipCode:
              type: string
              description: CEP.
            address:
              type: string
              description: Logradouro.
            number:
              type: string
              description: Número.
            neighborhood:
              type: string
              description: Bairro.
            complement:
              type: string
              description: Complemento.
            city:
              type: string
              description: Cidade.
            state:
              type: string
              description: Estado (formato UF).
            country:
              type: string
              description: País.
        historyStatus:
          type: array
          description: Histórico de status.
          items:
            type: object
            properties:
              modified:
                type: string
                description: Data em que o status foi aplicado (formato 'yyyy-MM-ddTHH:mm:ss').
              value:
                type: string
                $ref: "#/components/schemas/cardStatus"
                description: Status aplicado.
        wallets:
          type: array
          description: Identificação das carteiras virtuais que o cartão encontra-se habilitado.
          items:
            type: object
            properties:
              status:
                $ref: "#/components/schemas/walletStatus"
                description: Status do cartão na carteira.
              walletType:
                $ref: "#/components/schemas/walletTypes"
                description: Identificador da carteira que o cartão encontra-se vinculado.
              walletFlowAdd:
                $ref: "#/components/schemas/walletFlows"
                description: Classificação do fluxo que o cartão recebeu ao entrar na carteira.
        creditPos:
          type: object
          description: Objeto que contém informações sobre o limite de crédito do cartão pós-pago.
          properties:
            contractNumber:
              type: string
              description: Número do contrato do cliente.
            limit:
              type: number
              description: Limite de crédito do cliente.
            limitActive:
              type: number
              description: Limite de crédito ativo do cliente.
        activatedAt:
          type: string
          description: Data da ativação do cartão (formato 'yyyy-MM-ddTHH:mm:ss').
        lastUpdatedAt:
          type: string
          description: Data da última atualização do cartão (formato 'yyyy-MM-ddTHH:mm:ss').
        isActivated:
          type: boolean
          description: Informa se está ativo.
        isLocked:
          type: boolean
          description: Informa se está bloqueado.
        isCanceled:
          type: boolean
          description: Informa se está cancelado.
        isBuilding:
          type: boolean
          description: Informa se o cartão está sendo em construção.
        isFirtual:
          type: boolean
          description: Informa se é um cartão firtual.
        isPre:
          type: boolean
          description: Informa se é um cartão pré-pago.
        isPos:
          type: boolean
          description: Informa se é um cartão pós-pago.
  
    cardStatus:
      type: string
      enum:
        - Building      
        - Undefined
        - Active
        - UpdateRegisterLocked
        - UpdateRegisterCanceled
        - RegisterFraudLocked
        - RegisterFraudCanceled
        - CanceledByCustomer 
        - CanceledByEmitter
        - ReturnedLocked
        - Sleeping
        - InTransitLocked
        - ExpiredCanceled
        - StrayedCanceled
        - Inactive
        - DeathCanceled
        - LockedByPendingPayment 
        - LostOrTheftCanceled
        - WithoutMovementLocked
        - TemporarilyUserLocked
        - WrongPasswordAttemptLocked
        - UseFraudLocked
        - UseFraudCanceled
        - CardCanceledByAccount
    
    cardTokenizationResponse:
      type: object
      properties:
        data:
          type: string
          description: Token gerado.
        lastFourDigits:
          type: string
          description: Últimos quatro dígitos do cartão.
        phoneNumber:
          type: string
          description: Número de contato do cliente.
        address:
          type: object
          properties:
            zipCode:
              type: string
              description: CEP do endereço.
        
    cardTypes:
      type: string
      enum:
        - Physical
        - Virtual
    
    changeCardPasswordRequest:
      type: object
      properties:
        password:
          type: string
          description: Senha de uso do cartão (4 dígitos).
      required:
        - password
    
    changeCardStatusRequest:
      type: object
      properties:
        status:
          type: string
          $ref: "#/components/schemas/cardStatus"
          description: Status para o qual o cartão será modificado.
        password:
          type: string
          description: Senha de uso do cartão (4 dígitos).
        updateCardBinded:
          type: boolean
          description: Atualizar cartões vinculados.
      required:
        - status
        - password
        - updateCardBinded
   
    createCardRequest:
      type: object
      properties:
        documentNumber:
          type: string
          description: Número de documento de CPF ou CNPJ (informe somente os números). Tamanho máximo de 14 caracteres.
        cardName:
          type: string
          description: Nome que será impresso no cartão (não será permitido o uso de números e caracteres especiais). Tamanho máximo de 19 caracteres.
        alias:
          type: string
          description: Apelido do cartão (não será permitido o uso de caracteres especiais e o tamanho máximo é de 16 caracteres).
        bankAgency:
          type: string
          description: Número de agência (4 dígitos).
        bankAccount:
          type: string
          description: Número de conta que o cartão será vinculado.
        programId:
          type: integer
          description: Identificador do programa que será vinculado ao cartão.
        password:
          type: string
          description: "Senha do cartão para realizar transações (preencha com quatro números. Exemplo: '9348')."
        address:
          type: object
          description: Informações sobre endereço (se não for informado, será utilizado o endereço de cadastro do cliente).
          properties:
            zipCode:
              type: string
              description: CEP (informar somente os números).
            address:
              type: string
              description: Logradouro.
            number:
              type: string
              description: Número.
            neighborhood:
              type: string
              description: Bairro.
            complement:
              type: string
              description: Complemento.
            city:
              type: string
              description: Cidade.
            state:
              type: string
              description: Estado (informar a UF).
            country:
              type: string
              description: País.
          required:
            - zipCode
            - address
            - number
            - neighborhood
            - city
            - state
            - country
      required:
        - documentNumber
        - cardName
        - alias
        - bankAgency
        - bankAccount
        - password
        - programId
    
    createCustomerRequest:
      type: object
      properties:
        name:
          type: string
          description: Nome completo do cliente.
        socialName:
          type: string
          description: Nome pelo qual a pessoa gostaria de ser chamada. Saiba mais consultando a [Cartilha do nome social](https://www.mds.gov.br/webarquivos/publicacao/assistencia_social/Folders/cartilha_nome_social.pdf).
        motherName:
          type: string
          description: Nome da mãe do cliente.
        birthDate:
          type: string
          format: date-time
          description: Data de nascimento do cliente.
        programId:
          type: string
          description: Identificador do programa que será vinculado ao cartão.
        documentNumber:
          type: string
          description: Número do documento (CPF ou CNPJ). Informe somente números. 
        profession:
          type: string
          description: Profissão do cliente.
        maritalStatus:
          $ref: "#/components/schemas/maritalStatus"
        academicDegree:
          $ref: "#/components/schemas/academicDegree"
        incomeBracket:
          $ref: "#/components/schemas/incomeBracket"
        sex:
          $ref: "#/components/schemas/sex"
        email:
          type: string
          format: email
          description: E-mail do cliente.
        phone:
          type: object
          description: Número de telefone do cliente, com o DDD.
          properties:
            type:
              $ref: "#/components/schemas/phoneType"
            value:
              type: string
              description: Número do telefone do cliente.
            countryCode:
              type: string
              description: Código DDI do país.
          required:
            - type
            - value
            - countryCode
        address:
          $ref: "#/components/schemas/addressRequest"
      required:
        - programId
        - documentNumber
        - profession
        - maritalStatus
        - academicDegree
        - incomeBracket
        - sex
        - email
        - phone
        - address
    
    createCustomerResponse:
      type: object
      properties:
        companyKey:
          type: string
          description: Chave que identifica o parceiro dentro do Bankly.
        document:
          type: string
          description: Número de documento do cliente (CPF ou CNPJ).
        contract:
          type: string
          description: Número do contrato de crédito.
  
    createDuplicateCardRequest:
      type: object
      properties:
        status:
          type: string
          $ref: "#/components/schemas/duplicateCardStatus"
          description: Motivo da segunda via.
        documentNumber:
          type: string
          description: Número de documento de CPF ou CNPJ (informe somente os números).
        description:
          type: string
          description: Detalhes do cancelamento com qualquer informação considerada como relevante.
        password:
          type: string
          description: "Senha do cartão atual (primeira via) para realizar transações (preencha com quatro campos números. Exemplo: '9348')."
        address:
          type: object
          description: Informações sobre endereço (se não for informado será utilizado o endereço de cadastro do cliente).
          properties:
            zipCode:
              type: string
              description: CEP (informar somente os números).
            address:
              type: string
              description: Logradouro.
            number:
              type: string
              description: Número.
            neighborhood:
              type: string
              description: Bairro.
            complement:
              type: string
              description: Complemento.
            city:
              type: string
              description: Cidade.
            state:
              type: string
              description: Estado (informar a UF).
            country:
              type: string
              description: País.
          required:
            - zipCode
            - address
            - number
            - neighborhood
            - city
            - state
            - country
      required:
        - status
        - documentNumber
        - password

    creditErrorResponse:
      type: object
      properties:
        reference:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: integer
              message:
                type: string
              reasons:
                type: string
    
    dataPciResponse:
      type: object
      properties:
        cardNumber:
          type: string
          description: Numeração do cartão.
        cvv:
          type: string
          description: Código de segurança do cartão.
        expirationDate:
          type: string
          description: Data de expiração do cartão (formato 'MM/yy').
    
    duplicateCardStatus:
      type: string
      enum:
        - LostMyCard
        - CardWasStolen
        - CardWasDamaged
        - CardNotDelivered
        - UnrecognizedOnlinePurchase
    
    entryModeTypes:
      type: string
      enum:
        - Unknown
        - Manual
        - MagneticStripe
        - BarCodeReader
        - OCR
        - Chip
        - ContactlessObsolete
        - ContactlessMChip
        - ContactlessMChipObsolete
        - EletronicCommerce
        - CredentialOnFile
        - HybridTerminalFailedConnection
        - ChipCapableTerminal
        - EletronicCommerceSecureWithUCAF
        - Server
        - MagneticStripeFullTrackData
        - ContactlessMagneticStripe
        - ContactlessInput
        - Visa
    
    creditEvaluationStatus:
      type: string
      enum:
        - Approved
        - Reproved

    creditContractStatus:
      type: string
      enum:
        - Pending
        - Approved
        - Reproved
        - Canceled
        - Expired
        - Signed
        - Blocked

    getContractCreditResponse:
      type: object
      properties:
        name:
          type: string
          description: Nome completo do cliente.
        socialName:
          type: string
          description: Nome pelo qual a pessoa gostaria de ser chamada. Saiba mais consultando a [Cartilha do nome social](https://www.mds.gov.br/webarquivos/publicacao/assistencia_social/Folders/cartilha_nome_social.pdf).
        motherName:
          type: string
          description: Nome da mãe do cliente.
        birthDate:
          type: string
          format: date-time
          description: Data de nascimento do cliente.
        programId:
          type: string
          description: Identificador do programa que será vinculado ao cartão.
        documentNumber:
          type: string
          description: Número de documento do cliente (CPF ou CNPJ).
        profession:
          type: string
          description: Profissão do cliente.
        cardProxy:
          type: string
          description: Proxy do cartão.
        status:
          type: string
          description: Situação do contrato de crédito.
          $ref: "#/components/schemas/creditContractStatus"
        contract:
          type: string
          description: Número do contrato de crédito.
        maritalStatus:
          $ref: "#/components/schemas/maritalStatus"
        academicDegree:
          $ref: "#/components/schemas/academicDegree"
        incomeBracket:
          $ref: "#/components/schemas/incomeBracket"
        incomeBracketRange:
          type: number
          description: Valor intermediário da faixa salarial do cliente.
        expirationDate:
          type: string
          description: Data de expiração da proposta de crédito.
        sex:
          $ref: "#/components/schemas/sex"
        email:
          type: string
          format: email
          description: E-mail do cliente.
        address:
          $ref: "#/components/schemas/address"
        phone:
          type: object
          description: Número de telefone do cliente, com DDD.
          properties:
            type:
              $ref: "#/components/schemas/phoneType"
            value:
              type: string
              description: Número do telefone do cliente.
            countryCode:
              type: string
              description: Código DDI do país.
        creditEvaluation:
          type: object
          properties:
            status:
              type: string
              description: Situação da avaliação de crédito.
              $ref: "#/components/schemas/creditEvaluationStatus"
            evaluatedAt:
              type: string
              format: date-time
              description: Data em que ocorreu a avaliação.
            reasonRefusal:
              type: string
              description: Motivo de reprovação.
            policy:
              type: string
              description: Política utilizada na avaliação.
        acceptanceTerm:
          $ref: "#/components/schemas/acceptanceTerm"
        acceptanceTermHistory:
          type: array
          items:
            $ref: "#/components/schemas/acceptanceTerm"
  
    getDataPciRequest:
      type: object
      properties:
        password:
          type: string
          description: Senha informada na criação do cartão (4 dígitos).
      required:
        - password
    
    incomeBracket:
      type: string
      description: Faixa salarial do cliente.
      enum:
        - LessThousand
        - FromThousandToTwoThousand
        - FromTwoThousandToThreeThousand
        - FromThreeThousandToFiveThousand
        - FromFiveThousandToTenThousand
        - FromTenThousandToTwentyThousand
        - OverTwentyThousand
                    
    maritalStatus:
      type: string
      description: Estado civil do cliente.
      enum:
        - Single
        - Married
        - Separated
        - Divorced
        - Widower

    phoneType:
      type: string
      description: Tipo de telefone do cliente.
      enum:
        - Residential
        - Commercial
        - Mobile
   
    resultTransactionResponse:
      type: object
      properties:
        nextPage:
          type: string
          description: Identificador da próxima página.
        hasLastPage:
          type: boolean
          description: Indica se existe a próxima página na consulta.
        transactions:
          type: array
          description: Transações do cartão.
          items:
            type: object
            properties:
              account:
                type: object
                properties:
                  number: 
                    type: string
                    description: Número da conta na qual o cartão foi transacionado.
                  agency: 
                    type: string
                    description: Agência da conta na qual o cartão foi transacionado.
              amount:
                type: object
                properties:
                  value: 
                    type: number
                    description: Valor total da transação.
                  local: 
                    type: number
                    description: Valor da transação na moeda local.
                  net: 
                    type: number
                    description: Valor líquido da transação.
                  iof: 
                    type: number
                    description: Valor do Imposto de Operações Financeiras.
                  markup: 
                    type: number
                    description: Tarifa de conversão de moeda em caso de compras internacionais.
              merchant:
                type: object
                properties:
                  id: 
                    type: string
                    description: Identificador do comerciante.
                  name: 
                    type: string
                    description: Nome do comerciante.
                  mcc: 
                    type: string
                    description: Código identificador do ramo de negócio do comerciante.
                  city: 
                    type: string
                    description: Cidade onde ocorreu a transação.
              authorizationCode:
                type: string
                description: Identificador da transação na adquirente.
              countryCode:
                type: string
                description: Código do país onde ocorreu a transação.
              currencyCode:
                type: string
                description: Código da moeda em que foi realizada a transação.
              entryMode:
                type: string
                $ref: "#/components/schemas/entryModeTypes"
                description: Identificador da forma que a transação foi realizada.
              status:
                type: string
                $ref: "#/components/schemas/transactionsStatus"
                description: Situação da transação.
              transactionTimestamp:
                type: string
                description: Data em que ocorreu a transação (formato 'yyyy-MM-ddTHH:mm:ss+00:00').
              transactionType:
                type: string
                $ref: "#/components/schemas/transactionTypes"
                description: Indica a operação da transação.

    sex:
      type: string
      description: Gênero do cliente.
      enum:
        - Male
        - Female
        - Other
    
    trackingErrorResponse:
      type: object
      properties:
        reference:
          type: string
          description: Link para documentação de integração.
        errors:
          type: array
          items:
            type: object
            properties:
              code:
                type: string
                description: Código de erro.
              message:
                type: string
                description: Mensagem explicativa do erro.
                  
    trackingResponse:
      type: object
      properties:
        createdDate:
          type: string
          description: Data de criação do rastreio (formato 'yyyy-MM-ddTHH:mm:ss').
        externalTracking:
          type: object
          description: Objeto para rastreio de serviço externo
          properties:
            code:
              type: string
              description: Código de rastreio junto ao serviço externo.
            partner: 
              type: string
              description: Nome do parceiro do serviço externo.
        name:
          type: string
          description: Nome impresso no cartão.
        alias:
          type: string
          description: Apelido impresso no cartão.
        estimatedDeliveryDate:
          type: string
          description: Data prevista de entrega do cartão (formato 'yyyy-MM-ddTHH:mm:ss').
        address:
          type: array
          description: Lista de endereços do rastreio
          items:
            properties:
              zipCode:
                type: string
                description: CEP.
              address:
                type: string
                description: Logradouro.
              number:
                type: string
                description: Número.
              neighborhood:
                type: string
                description: Bairro.
              complement:
                type: string
                description: Complemento.
              city:
                type: string
                description: Cidade.
              state:
                type: string
                description: Estado (formato UF).
              country:
                type: string
                description: País.
              isActive:
                type: boolean
                description: Situação de endereço de rastreio.
        status:
          type: array
          description: Histórico de status do rastreio.
          items:
            type: object
            properties:
              createdDate:
                type: string
                description: Data em que o status foi aplicado (formato 'yyyy-MM-ddTHH:mm:ss').
              type:
                type: string
                $ref: "#/components/schemas/trackingStatus"
                description: Status aplicado.
              reason:
                type: string
                description: Motivo do status.
        finalized:
          type: array
          description: Histórico de baixa do rastreio.
          items:
            type: object
            properties:
              createdDate:
                type: string
                description: Data em que a baixa foi adicionada (formato 'yyyy-MM-ddTHH:mm:ss').
              recipientName:
                type: string
                description: Nome do recebedor do cartão.
              recipientKinship:
                type: string
                description: Grau de parentesco com o titular do cartão.
              documentNumber:
                type: string
                description: Número do documento do recebedor do cartão.
              attempts:
                type: number
                description: Quantidade de tentativas de entrega.

    trackingStatus:
      type: string
      enum:
        - Created
        - InProgress
        - NotDelivered
        - Cancelled
        - Custody
        - Delivered
    
    transactionsStatus:
      type: string
      enum:
        - TransactionHoldWasReproved
        - TransactionHoldWasApproved
        - TransactionWasReversed
        - TransactionHoldWasExpired
        - TransactionWasConfirmed
        - TransactionWasReversedInSecondInstance
        - TransactionVoucherWasCreated
   
    transactionTypes:
      type: string
      enum:
        - Unknown
        - Purchase
        - Withdrawal
        - Refund
        - Balance
    
    updateTrackingAddressRequest: 
          type: object
          description: Informações sobre endereço para nova tentativa de entrega.
          properties:
            zipCode:
              type: string
              description: O CEP deve ser nacional e conter oito dígitos.
            address:
              type: string
              description: Nome do logradouro em que o cliente deseja receber o cartão.
            number:
              type: string
              description: Número do imóvel com até 10 caracteres (se não existir, substitua por “S/N”).
            neighborhood:
              type: string
              description: Bairro para nova entrega.
            complement:
              type: string
              description: Complemento do endereço.
            city:
              type: string
              description: Nome da cidade para a entrega.
            state:
              type: string
              description: "Estado (UF) do novo endereço de entrega. Deve-se respeitar o formato proposto pela ISO 3166-2:BR. Exemplo: SP."
            country:
              type: string
              description: "Serão aceitos apenas endereços em território nacional. Deve-se respeitar o formato proposto pela ISO 3166-1. Exemplo: BR."
          required:
            - zipCode
            - address
            - number
            - neighborhood
            - city
            - state
            - country
    
    walletTypes:
      type: string
      enum:
        - GooglePay
          
    walletStatus:
      type: string
      enum:
        - Approved
        - Denied
      
    walletFlows:
      type: string
      enum:
        - Undefined
        - GreenPatch
        - YellowPatch

    limitAlterationRequest:
      type: object
      required:
        - documentNumber
        - contractNumber
        - limit
      properties:
        documentNumber:
          type: string
          description: Número de documento de CPF ou CNPJ. Informe somente os números.
        contractNumber:
          type: string
          description: Número do contrato do cliente.
        limit:
          type: number
          description: Novo limite de crédito ativo (definido pelo cliente).

    nextStatusResponse:
      type: array
      description: Lista de objetos contem informações sobre os próximos status do cartão.
      items:
        type: object
        properties:
          value:
            type: string
            description: Próximo status do cartão.
          isDefinitive: 
            type: boolean
            description: Indica a reversibilidade do status, sendo TRUE para reversível e FALSE para irreversível.



    CreditReanalyzeOriginType:
      enum:
      - COMPANY_REQUEST
      - CUSTOMER_REQUEST
      type: string
    ReanalyzeCreditDto:
      type: object
      required:
        - origin
      properties:
        origin:
          description: Solicitante do chamado de reanálise.
          $ref: "#/components/schemas/CreditReanalyzeOriginType"
      additionalProperties: false
    AcceptCreditLimitIncreaseDto:
      type: object
      required:
        - authorization
        - idState
        - token
        - terms
        - trace
        - userInfo
      properties:
        authorization:
          type: string
          description: Token que o cliente utilizou na assinatura eletrônica, o qual comprova a sua autenticação no site.
          nullable: true
        idState:
          type: string
          description: Identificador do contrato.
          nullable: true
        token:
          type: string
          description: Token de SMS/email que confirma a identidade do usuário que assinou o aceite.
          nullable: true
        terms:
          type: string
          description: "Insira o texto do contrato que foi aceito pelo cliente. Sugestão: pode-se remover as quebras de linha e enviar o texto corrido do aceite."
          nullable: true
        trace:
          type: array
          description: Objeto que contém os dados de rastreio do usuário solicitante.
          items:
            $ref: "#/components/schemas/TraceDto"
          nullable: true
        userInfo:
          $ref: "#/components/schemas/UserInfoDto"
      additionalProperties: false
    TraceDto:
      type: object
      required:
        - state
        - date
      properties:
        state:
          type: string
          description: Log de navegação do cliente nas telas do frontend, desde o login até a tela de aceite.
          nullable: true
        date:
          type: string
          format: date-time
          description: Data do aceite.
          nullable: true
      additionalProperties: false
    UserInfoDto:
      type: object
      description: Objeto que contém os dados do usuário no momento em que solicitou o crédito.
      required:
        - address
        - customerId
        - mail
        - name
        - phone
      properties:
        address:
          type: string
          description: Endereço completo do cliente.
          nullable: true
        customerId:
          type: string
          description: Identificador único do cliente.
          nullable: true
        mail:
          type: string
          format: email
          description: E-mail do cliente.
          nullable: true
        name:
          type: string
          description: Nome completo do cliente
          nullable: true
        phone:
          type: string
          description: Número de telefone do cliente, com DDD.
          nullable: true
      additionalProperties: false

x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
  samples-languages:
    - curl

openapi: 3.0.1
info:
  title: Gestão de Contas
  description: Abra e gerencie contas de pagamento do seu cliente pessoa física ou jurídica.
  version: "1.0"
servers:
  - url: https://bsp.sandbox.bankly.com.br
paths:
  /accounts/{accountNumber}:
    get:
      tags:
        - Conta de pagamentos
      summary: Consulta de dados de uma conta
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Consulte todos os dados de uma conta de pagamentos. Opcionalmente, você pode obter o saldo dessa conta.</p>  
          <b>Scope: account.read</b>
        </div>
      operationId: GetAccount
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/AccountNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion"
        - $ref: "#/components/parameters/IncludeBalance"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailedResponse"
              examples:
                accountDetailedExample:
                  $ref: "#/components/examples/accountDetailedExample"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "409":
          $ref: "http://localhost:3320/commons/components#/components/responses/409"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"

  /accounts/{accountNumber}/balance-blocks:
    post:
      tags:
        - Bloqueio de saldo
      summary: Criação de bloqueio de saldo
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Este <i>endpoint</i> permite que o provedor de serviços bancários bloqueie o saldo de uma determinada conta aberta com ele.</p>
          <b>Scope: account.balance-block.create</b>
        </div>
        [block:callout]
          {
            "type": "warning",
            "title": "Importante",
            "body": "Atualmente só permitimos que essa API seja utilizada com a finalidade de realizar bloqueio judicial."
          }
        [/block]
      parameters:
        - $ref: "#/components/parameters/AccountNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - name: Idempotency-Key
          in: header
          description: Chave de idempotêcia para a requisição (UUID v4).
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateBalanceBlockRequest"
      responses:
        "202":
          description: A solicitação foi aceita e o bloqueio de saldo está sendo processado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateBalanceBlockResponse"
              examples:
                BalanceJudicialBlockExample:
                  $ref: "#/components/examples/CreateBalanceJudicialBlockExample"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"

  /accounts/{accountNumber}/balance-blocks/{authenticationCode}:
    get:
      tags:
        - Bloqueio de saldo
      summary: Consulta de bloqueio de saldo
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Este <i>endpoint</i> permite que o provedor de serviços bancários consulte o bloqueio de saldo.</p>
          <b>Scope: account.balance-block.read</b>
        </div>
      parameters:
        - $ref: "#/components/parameters/AccountNumber"
        - $ref: "#/components/parameters/AuthenticationCode"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "202":
          description: Recurso encontrado.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QueryBalanceBlockResponse"
              examples:
                BalanceJudicialBlockExample:
                  $ref: "#/components/examples/QueryBalanceJudicialBlockExample"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"      

  /accounts/{accountNumber}/closure:
    patch:
      tags:
        - Conta de pagamentos
      summary: |
        Encerramento de conta
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Solicite o encerramento da conta do cliente.</p> 
          <b>Scope: account.close</b>
        </div>
      operationId: CancelCustomerRegistration
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/AccountNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClosureRequest"
      responses:
        "202":
          $ref: "http://localhost:3320/commons/components#/components/responses/202"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "409":
          $ref: "http://localhost:3320/commons/components#/components/responses/409"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"

  /customers/{documentNumber}/accounts:
    get:
      tags:
        - Conta pessoa física
      summary: Consulta de contas
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Retornaremos uma lista com todas as contas desse cliente, independentemente de seus <i>status</i>.</p> 
          <b>Scope: account.read</b>
        </div>
      operationId: GetPersonalAccounts
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/CustomerDocument"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - $ref: "#/components/parameters/Page"
        - $ref: "#/components/parameters/Size"
        - $ref: "#/components/parameters/Code"
        - $ref: "#/components/parameters/Ispb"
        - $ref: "#/components/parameters/Branch"
        - $ref: "#/components/parameters/AccountType"
        - $ref: "#/components/parameters/Status"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountBasicResponse"
              examples:
                listOfAccounts:
                  $ref: "#/components/examples/listOfAccounts"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
    post:
      tags:
        - Conta pessoa física
      summary: Abertura de conta
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Este <i>endpoint</i> permite a criação de contas de pagamento para clientes do tipo pessoa física que tiveram seu registro previamente aprovado.</p>
          <b>Scope: account.create</b>
        </div>
        [block:callout]
          {
            "type": "warning",
            "title": "Importante",
            "body": "Caso cliente possua [multicontas](https://docs.bankly.com.br/docs/multi-accounts) ativas, o parceiro deverá utilizar o cabeçalho <code>Idempotency-Key</code> nas requisições, a fim de evitar a criação de contas duplicadas."
          }
        [/block]
      operationId: CreatePersonalAccount
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/CustomerDocument"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/IdempotencyKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        "201":
          description: Recurso criado com sucesso.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
            Location:
              $ref: "http://localhost:3320/commons/components#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailedResponsePost"
              examples:
                accountDetailedExample:
                  $ref: "#/components/examples/accountDetailedExamplePost"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "409":
          $ref: "http://localhost:3320/commons/components#/components/responses/409"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"

  /accounts/{accountNumber}/balances:
    get:
      tags:
        - Conta de pagamentos
      summary: Consulta do saldo de uma conta
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Consulte o saldo de uma conta de pagamentos.</p>
          <b>Scope: account.read</b>
        </div>
      operationId: GetAccountBalance
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/AccountNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/X-Correlation-Id"
        - $ref: "#/components/parameters/BalanceType"
        - $ref: "#/components/parameters/BalanceCurrency"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BalanceResponse"
              examples:
                BalanceDefaultResponse:
                  $ref: "#/components/examples/balanceDefaultResponse"
                BalanceBlockedResponse:
                  $ref: "#/components/examples/balanceBlockedResponse"
                BalanceResidualResponse:
                  $ref: "#/components/examples/balanceResidualResponse"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"

  /business/{documentNumber}/accounts:
    get:
      tags:
        - Conta pessoa jurídica
      summary: Consulta de contas
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Retornaremos uma lista com todas as contas dessa empresa, independentemente de seus <i>status</i>.</p>
          <b>Scope: account.read</b>
        </div>
      operationId: GetBusinessAccounts
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/BusinessDocument"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountBasicResponse"
              examples:
                listOfAccounts:
                  $ref: "#/components/examples/listOfAccounts"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "409":
          $ref: "http://localhost:3320/commons/components#/components/responses/409"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
    post:
      tags:
        - Conta pessoa jurídica
      summary: Abertura de conta
      description: |
        <div class="bkly-ref-description">
          <p>[Stable] Este <i>endpoint</i> permite a criação de contas de pagamento para clientes do tipo pessoa jurídica que tiveram seu registro previamente aprovado.</p>
          <b>Scope: account.create</b>
        </div>  
        [block:callout]
          {
            "type": "warning",
            "title": "Importante",
            "body": "Caso cliente possua [multicontas](https://docs.bankly.com.br/docs/multi-accounts) ativas, o parceiro deverá utilizar o cabeçalho <code>Idempotency-Key</code> nas requisições, a fim de evitar a criação de contas duplicadas."
          }
        [/block]
      operationId: CreateBusinessAccount
      parameters:
        - $ref: "http://localhost:3320/commons/components#/components/parameters/BusinessDocument"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/IdempotencyKey"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAccountRequest"
      responses:
        "201":
          description: Recurso criado com sucesso.
          headers:
            x-bkly-correlation-id:
              $ref: "http://localhost:3320/commons/components#/components/headers/CorrelationId"
            Location:
              $ref: "http://localhost:3320/commons/components#/components/headers/Location"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountDetailedResponsePost"
              examples:
                accountDetailedExample:
                  $ref: "#/components/examples/accountDetailedExamplePost"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "409":
          $ref: "http://localhost:3320/commons/components#/components/responses/409"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"

  /accounts/{accountNumber}/income-report:
    get:
      tags:
        - Informe de Rendimentos
      summary: Informe de rendimentos
      description: |
        <div class="bkly-ref-description">
        [Stable] Obtenha os dados necessários para gerar o Informe de Rendimentos de contas de pagamentos (pessoa física ou jurídica) e de outras fontes pagadoras. <br />É possível refinar a busca informando o ano calendário desejado (o padrão é sempre o ano vigente). <br />
        <b>Scope: income.report.read</b>
        </div>
        [block:callout]
          {
            "type": "warning",
            "title": "Importante",
            "body": "Para mais detalhes sobre os campos retornados nessa requisição, consulte o [Manual do dev](https://docs.bankly.com.br/docs/informe-de-rendimentos-v2)."
          }
          [/block]
      operationId: GetIncomeReportByAccountNumberAsync
      parameters:
        - name: accountNumber
          in: path
          description: Número da conta da qual se deseja obter os dados para o informe.
          required: true
          schema:
            type: string
            description: Número da conta.
            nullable: true
        - name: calendar
          in: query
          description: Ano para a geração das informações do informe de rendimento. O valor padrão será o ano atual da consulta menos um.
          schema:
            type: integer
            description: Ano para a geração das informações do informe de rendimento. O valor padrão será o ano atual da consulta menos um.
            format: int32
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              description: Id correlação da operação requisitada.
              schema:
                type: string
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/GetIncomeReportResponse"
        "204":
          description: Recurso encontrado, mas não existe conteúdo na sua requisição.
          headers:
            x-bkly-correlation-id:
              description: Id correlação da operação requisitada.
              schema:
                type: string
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
      security:
        - Bearer: []

  /accounts/{accountNumber}/pockets:
    post:
      tags:
        - Conta pocket
      summary: Criação de conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Crie uma conta pocket para que seja possível guardar dinheiro fora da conta de pagamento.</p> 
          <b>Scope: pocket.create</b>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para criar uma conta pocket, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreatePocketAsync
      parameters:
        - name: accountNumber
          in: path
          required: true
          description: Número da conta de pagamento com dígito, a partir da qual a pocket será criada.
          schema:
            type: string
            nullable: true
        - name: idempotency-key
          in: header
          required: true
          description: Chave de Idempotência
          schema:
            type: string
            description: Informe um GUID v4.
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreatePocketRequestRequest"
      responses:
        "201":
          description: Recurso criado com sucesso.
          headers:
            x-bkly-correlation-id:
              description: "id de correlação da operação requisitada."
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreatePocketResponseComp"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"
    get:
      tags:
        - Conta pocket
      summary: Consulta dos dados de todas as contas pockets
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Obtenha uma lista com os dados de todas as contas pockets associadas a uma conta de pagamento. A busca permite filtrar pelo status e pelo tipo da conta pocket.</p> 
          <b>pocket.read</b>
        </div>
      operationId: GetPocketsByAccountNumberAsync
      parameters:
        - name: accountNumber
          in: path
          required: true
          schema:
            type: string
            description: Número da conta de pagamento com dígito.
            nullable: true
        - name: pocketType
          in: query
          schema:
            type: string
            description: "Tipo da Pocket. Exemplo: Pocket_BRL."
            nullable: true
        - name: status
          in: query
          schema:
            $ref: "#/components/schemas/Status"
        - name: pageSize
          in: query
          schema:
            type: integer
            description: Quantidade de itens a serem retornados por página.
            format: int32
        - name: page
          in: query
          schema:
            type: integer
            description: Pagina a ser retornada.
            format: int32
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: "Recurso encontrado"
          headers:
            x-bkly-correlation-id:
              description: "Id correlação da operação requisitada."
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPocketByAccountNumberResponse"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"
  
  /pockets/{pocketNumber}:
    get:
      tags:
        - Conta pocket
      summary: Consulta dos dados de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Consulte os dados de uma conta pocket específica.</p> 
          <b>Scope: pocket.read</b>
        </div>
      operationId: GetPocketAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - name: resultLevel
          in: query
          description: Nível de detalhamento da resposta (DETAILED ou BASIC). A consulta básica (BASIC) retornará apenas os dados da pocket. Já a consulta detalhada (DETAILED) trará também os dados da conta de pagamento à qual a pocket está atrelada.
          schema:
            type: string
            nullable: true
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              description: Id de correlação da operação requisitada.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPocketNumberResponse"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/balances:
    get:
      tags:
        - Conta pocket
      summary: Consulta do saldo de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Consulte o saldo disponível, bloqueado, em processamento e o total de uma conta pocket.</p> 
          <b>Scope: pocket.read</b>
        </div>
      operationId: GetPocketBalanceAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              description: Id de correlação da operação requisitada.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPocketBalanceResponse"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/users:
    patch:
      tags:
        - Conta pocket
      summary: Alteração do usuário
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Realize a alteração do usuário de uma conta pocket.</p>
          <b>Scope: pocket.update</b>
        </div>
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChangingUserRequest"
      responses:
        "200":
          description: Usuário da conta pocket alterado com sucesso.
          headers:
            x-bkly-correlation-id:
              description: "id de correlação da operação requisitada."
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChangingUserResponse"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/transactions/savings:
    post:
      tags:
        - Conta pocket
      summary: Depósito em uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Deposite um valor da conta de pagamento para a conta pocket atrelada a ela.</p>  
          <b>Scope: pocket.transaction.create</b>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para que seja possível realizar a transferência, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreateDepositTransactionAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - name: idempotency-key
          in: header
          required: true
          description: Chave de Idempotência
          schema: { type: string, description: "Informe um GUID v4" }
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PocketTransactionRequestRequest"
      responses:
        "202":
          description: A requisição foi aceita e está sendo processada.
          headers:
            x-bkly-correlation-id:
              description: "id de correlação da operação requisitada."
              schema:
                type: string
            Location:
              description: "Localização do recurso recém-criado ou em análise."
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PocketTransactionResponse"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/transactions/redeems:
    post:
      tags:
        - Conta pocket
      summary: Resgate de um valor da conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Transfira um valor da conta pocket para a conta de pagamento ao qual ela está associada.</p>  
          <b>Scope: pocket.transaction.create</b>
        </div>
        [block:callout]
        {
          "type": "warning",
          "title": "Importante",
          "body": "Para que seja possível a transferência, é necessário ter uma conta de pagamento ativa."
        }
        [/block]
      operationId: CreateWithdrawalTransactionAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
        - name: idempotency-key
          in: header
          description: Chave de Idempotência
          schema:
            type: string
            description: "Informe um GUID v4"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PocketTransactionRequestRequest"
      responses:
        "202":
          description: A requisição foi aceita e está sendo processada.
          headers:
            x-bkly-correlation-id:
              description: "id de correlação da operação requisitada."
              schema:
                type: string
            Location:
              description: "Localização do recurso recém-criado ou em análise."
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PocketTransactionResponse"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "422":
          $ref: "http://localhost:3320/commons/components#/components/responses/422"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/transactions/{authenticationCode}:
    get:
      tags:
        - Conta pocket
      summary: Consulta de uma transação
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Realize consulta de uma transação específica, de depósito ou resgate, ocorrida entre a conta de pagamento e a pocket.</p> 
          <b>Scope: pocket.transaction.read</b>
        </div>
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - name: authenticationCode
          in: path
          description: Identificador da transação em formato GUID, retornado no endpoint de depósito ou resgate de valor.
          required: true
          schema:
            type: string
            nullable: true
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      responses:
        "200":
          description: Recurso encontrado.
          headers:
            x-bkly-correlation-id:
              description: Id de correlação da operação requisitada.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetPocketTransactionResponse"
        "400":
          $ref: "http://localhost:3320/commons/components#/components/responses/400"
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          $ref: "http://localhost:3320/commons/components#/components/responses/404"
        "500":
          $ref: "http://localhost:3320/commons/components#/components/responses/500"
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"

  /pockets/{pocketNumber}/closure:
    patch:
      tags:
        - Conta pocket
      summary: Encerramento de uma conta pocket
      description: |
        <div class="bkly-ref-description">
          <p>[Beta] Encerre uma conta pocket.</p>
          <b>Scope: pocket.close</b>
        </div>
      operationId: ClosePocketAccountAsync
      parameters:
        - $ref: "#/components/parameters/PocketNumber"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/ApiVersion2"
        - $ref: "http://localhost:3320/commons/components#/components/parameters/Authorization"
      requestBody:
        content:
          application/json:
            {
              schema:
                {
                  $ref: "#/components/schemas/PocketAccountClosureRequestRequest",
                },
            }
      responses:
        "204":
          description: "Recurso encerrado"
          headers:
            x-bkly-correlation-id:
              description: "Id correlação da operação requisitada."
              schema:
                type: string
            Location:
              description: "Localização do recurso recém-criado ou em análise."
              schema:
                type: string
        "401":
          $ref: "http://localhost:3320/commons/components#/components/responses/401"
        "403":
          $ref: "http://localhost:3320/commons/components#/components/responses/403"
        "404":
          description: Recurso não encontrado.
          headers:
            {
              x-bkly-correlation-id:
                {
                  description: "id de correlação da operação requisitada.",
                  schema: { type: string },
                },
            }
          content:
            {
              application/json:
                { schema: { $ref: "#/components/schemas/ErrorResponse" } },
            }
        "422":
          description: "A requisição não pode ser processada, devido a uma regra de negócio."
          headers:
            {
              x-bkly-correlation-id:
                {
                  description: "Id correlação da operação requisitada.",
                  schema: { type: string },
                },
            }
          content:
            {
              application/json:
                { schema: { $ref: "#/components/schemas/ErrorResponse" } },
            }
        "500":
          description: Ocorreu algum erro inesperado no nosso servidor.
          headers:
            {
              x-bkly-correlation-id:
                {
                  description: "id de correlação da operação requisitada.",
                  schema: { type: string },
                },
            }
          content:
            {
              application/json:
                { schema: { $ref: "#/components/schemas/ErrorResponse" } },
            }
        "503":
          $ref: "http://localhost:3320/commons/components#/components/responses/503"



security:
  - Bearer: []

components:
  parameters:
    AuthenticationCode:
      name: authenticationCode
      in: path
      description: Código de autenticação da operação de bloqueio.
      required: true
      schema:
        type: string

    IncludeBalance:
      name: includeBalance
      in: query
      description: Inclua o saldo da conta na pesquisa.
      required: false
      style: form
      explode: true
      schema:
        type: boolean
        default: false

    AccountNumber:
      name: accountNumber
      in: path
      description: Número da conta.
      required: true
      schema:
        type: string

    PocketNumber:
      name: pocketNumber
      in: path
      description: Número da conta pocket.
      required: true
      schema:
        type: string
        nullable: true

    BalanceType:
      name: type
      in: query
      description: Tipo do saldo que será retornado.
      required: false
      schema:
        type: string
        enum:
          - RESIDUAL
          - BLOCKED
          - DEFAULT
        nullable: true

    BalanceCurrency:
      name: currency
      in: query
      description: Código da moeda que deverá ser consultada.
      required: false
      schema:
        type: string

    Page:
      name: page
      in: query
      description: Número da página.
      required: false
      schema:
        type: string

    Size:
      name: size
      in: query
      description: Quantidade de registros que serão retornados.
      required: false
      schema:
        type: string

    Code:
      name: code
      in: query
      description: Código do banco.
      required: false
      schema:
        type: string

    Ispb:
      name: ispb
      in: query
      description: ISPB do banco.
      required: false
      schema:
        type: string

    Branch:
      name: branch
      in: query
      description: Número da agência bancária.
      required: false
      schema:
        type: string

    AccountType:
      name: type
      in: query
      description: Tipo da conta.
      required: false
      schema:
        enum:
        - Payment
        - Checking
        type: string

    Status:
      name: status
      in: query
      description: Situação da conta.
      required: false
      schema:
        enum:
        - Active
        - Closed
        type: string

  schemas:
    PaymentAccountHolder:
      type: object
      description: Dados do títular da conta.
      properties:
        document:
          "$ref": "#/components/schemas/Document"
          additionalProperties: false
        type:
          type: string
          enum:
            - CUSTOMER
            - BUSINESS
          description: Tipo do titular da conta (CUSTOMER ou BUSINESS).
          nullable: true
        name:
          type: string
          description: Nome do titular da conta.
          nullable: true
        createdAt:
          type: string
          description: Data da criação da entidade titular da conta.
          format: date-time
          nullable: true

    Payer:
      type: array
      properties:
        source:
          "$ref": "#/components/schemas/Source"
        group:
          type: string
          description: Grupo da ficha de bens e direitos a ser informado na declaração.
          nullable: true
        currencies:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/CurrencyIncome"
          nullable: true
        netIncome:
          type: object
          additionalProperties:
            "$ref": "#/components/schemas/NetIncomeV2"
          nullable: true
      additionalProperties: false

    Source:
      type: object
      description: Objeto que contém informações sobre a fonte pagadora.
      properties:
        name:
          type: string
          description: Nome da fonte pagadora.
        document:
          type: object
          description: Objeto que contém informações do documento da fonte pagadora.
          properties:
            value:
              type: string
              description: Número de documento da fonte pagadora (CNPJ).
            type:
              type: string
              description: Tipo do documento da fonte pagadora (sempre será CNPJ).

    NetIncome:
      type: object
      description: Detalhes sobre os rendimentos líquidos do cliente.
      properties:
        year:
          type: integer
          format: int32
        cost:
          "$ref": "#/components/schemas/Cost"
        amount:
          "$ref": "#/components/schemas/Amount"
        fiat:
          "$ref": "#/components/schemas/FiatBalance"
      additionalProperties: false

    NetIncomeV2:
      type: object
      description: Detalhes sobre os rendimentos líquidos do cliente.
      properties:
        year:
          type: integer
          format: int32
          description: Ano calendário do rendimento líquido.
        amount:
          "$ref": "#/components/schemas/Amount"

      additionalProperties: false

    FiatBalance:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        currency:
          type: string
          nullable: true
      additionalProperties: false

    Cost:
      type: object
      properties:
        value:
          type: number
          format: double
          nullable: true
        currency:
          type: string
          nullable: true
      additionalProperties: false

    Currency:
      type: object
      properties:
        code:
          type: string
          nullable: true
        balances:
          type: array
          items:
            "$ref": "#/components/schemas/Balance"
          nullable: true
      additionalProperties: false

    CurrencyIncome:
      type: object
      properties:
        code:
          type: string
          nullable: true
          description: Código do bem a ser declarado.
        balances:
          type: array
          items:
            "$ref": "#/components/schemas/BalanceIncome"
          nullable: true
      additionalProperties: false

    BalanceIncome:
      type: array
      properties:
        year:
          type: string
          description: Ano do saldo.
        cost:
          type: object
          description: Objeto do custo de aquisição da moeda. Apenas utilizado para criptoativos.
          properties:
            value:
              type: number
              description: Valor do custo de aquisição das moedas.
            currency:
              type: string
              description: Sigla da moeda.
        amount:
          type: object
          description: Objeto que contém o saldo da conta.
          properties:
            value:
              type: number
              description: Valor referente ao saldo da conta.
            currency:
              type: string
              description: Sigla da moeda do saldo.
        fiat:
          type: object
          description: Objeto que contém o valor do saldo em moeda fiduciária. Apenas utilizado para criptoativos.
          properties:
            value:
              type: number
              description: Valor do saldo de criptoativos em moeda fiduciária.
            currency:
              type: string
              description: Sigla da moeda.

    IncomeReportResponse:
      type: object
      properties:
        holder:
          $ref: "#/components/schemas/PaymentAccountHolder"
        account:
          $ref: "#/components/schemas/Account"
        payers:
          type: array
          items:
            $ref: "#/components/schemas/Payer"
          nullable: true
      additionalProperties: false

    GetIncomeReportResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/IncomeReportResponse"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          description: Metadados da requisição.
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    CreatePocketRequest:
      required:
        - currency
        - label
        - useCase
        - user
      type: object
      properties:
        user:
          $ref: "#/components/schemas/User"
        currency:
          minLength: 1
          type: string
          description: "Sigla da moeda utilizada, de acordo com a ISO 4217."
        label:
          minLength: 1
          type: string
          description: "Label para criação da conta pocket."
        useCase:
          description: "Especificação da finalidade da pocket."
          $ref: "#/components/schemas/UseCase"
      additionalProperties: false

    UseCase:
      minLength: 1
      enum:
        - CORPORATE_EXPENSES
        - ACCOUNT_FOR_UNDER_AGE
        - FLEXIBLE_BENEFITS
        - BALANCE_SEGREGATION
      type: string

    CreatePocketRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CreatePocketRequest"
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    ChangingUserRequest:
      properties:
        data:
          $ref: "#/components/schemas/User"
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    CreatePocketResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketBasicResponseDto"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    CreatePocketResponseComp:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/CreatePocketCompleteResponseDto"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    ChangingUserResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/ChangingUserResponseData"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    Status:
      type: string
      description: Situação da conta Pocket.
      nullable: true
      enum:
        - ACTIVE
        - DORMANT
        - LOCKED
        - CLOSED

    GetPocketTransactionResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/QueryFromAPocketTransactionResponse"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    GetPocketNumberResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/QueryFromAPocketResponse"
        links:
          type: array
          items: { $ref: "#/components/schemas/Link" }
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: { type: object, additionalProperties: false }
          nullable: true
      additionalProperties: false

    QueryFromAPocketResponse:
      type: object
      properties:
        number:
          type: string
          description: Número da conta pocket.
        label:
          type: string
          description: Nome descritivo da conta pocket.
        suffix:
          type: string
          description: "Sufixo atribuído ao número da pocket. Exemplo: BRL."
        currency:
          type: string
          description: Sigla da moeda corrente da pocket.
        type:
          type: string
          description: "Tipo da conta com a sigla da moeda. Exemplo: POCKET_BRL."
        status:
          type: string
          description: Situação da conta pocket.
        reason:
          type: string
          description: Motivo da situação da conta pocket. Nesse caso, sempre será HOLDER_REQUEST.
        category:
          type: string
          description: Categoria da conta.
        useCase:
          type: string
          description: "Motivo de uso da conta pocket, que pode ser: “ACCOUNT_FOR_UNDER_AGE” (Conta para menor de idade), “CORPORATE_EXPENSES” (Despesas corporativas), “FLEXIBLE_BENEFITS” (Benefícios flexíveis) e “BALANCE_SEGREGATION” (Segregação de saldo)."
        createdAt:
          type: string
          description: Data de criação da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        updatedAt:
          type: string
          description: Data de atualização da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        user:
          $ref: "#/components/schemas/User"
        account:
          type: object
          description: Esse objeto é retornado apenas em consultas detalhadas (<code>resultLevel</code> = DETAILED).
          properties:
            branch:
              type: string
              nullable: false
              description: Número da agência bancária.
            number:
              type: string
              nullable: false
              description: Número da conta de pagamento.
            status:
              type: string
              nullable: false
              description: Situação da conta de pagamento (ACTIVE ou CLOSED).
            bank:
              $ref: "#/components/schemas/Bank"
            holder:
              $ref: "#/components/schemas/HolderCompleteResponse"

    QueryFromAPocketTransactionResponse:
      type: object
      properties:
        authenticationCode:
          type: string
          description: Identificador da transação.
        amount:
          $ref: "#/components/schemas/IAmount"
        pocket:
          type: object
          properties:
            number:
              type: string
              description: Número da conta pocket.
            status:
              $ref: "#/components/schemas/Status"
            balances:
              $ref: "#/components/schemas/BalanceTotal"
            account:
              $ref: "#/components/schemas/PaymentAccount"
        type:
          type: string
          description: Tipo de transação realizada (DEPOSIT ou REDEEM).
        status:
          type: string
          description: "Situação da transação, que pode ser: “CREATED” (criada), “IN_PROCESS” (em processamento), “DONE” (concluída), “UNDONE” (desfeita) e “ERROR” (erro)."
        createdAt:
          type: string
          description: Data de criação da transação, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        updatedAt:
          type: string
          description: Data de atualização da transação, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.

    PaymentAccount:
      type: object
      properties:
        branch:
          type: string
          description: Número da agência.
        number:
          type: string
          description: Número da conta.
        status:
          $ref: "#/components/schemas/AccountStatus"
        bank:
          $ref: "#/components/schemas/Bank"
        balances:
          $ref: "#/components/schemas/BalanceTotal"
        holder:
          $ref: "#/components/schemas/HolderResponseDepRed"

    DocumentNumberType:
      enum:
        - CPF
        - CNPJ
      type: string

    Document:
      type: object
      properties:
        value:
          type: string
          description: Número do documento do usuário.
          nullable: true
        type:
          $ref: "#/components/schemas/DocumentNumberType"
      additionalProperties: false

    User:
      required:
        - birthDate
        - document
        - name
      type: object
      properties:
        name:
          minLength: 1
          description: Nome do usuário da conta pocket.
          type: string
        document:
          $ref: "#/components/schemas/Document"
        birthDate:
          minLength: 1
          type: string
          description: Data de nascimento do usuário da conta pocket.
          format: date-time
      additionalProperties: false

    PocketTransactionRequest:
      type: object
      properties:
        amount:
          $ref: "#/components/schemas/Amount"
        description:
          $ref: "#/components/schemas/Description"
      additionalProperties: false

    PocketTransactionRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketTransactionRequest"
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    GetPocketByAccountNumberResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: "#/components/schemas/GetPocketByAccountNumberResp"
          nullable: true
          readOnly: true
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    GetPocketByAccountNumberResp:
      type: object
      properties:
        number:
          type: string
          description: Número da conta pocket.
        label:
          type: string
          description: Nome descritivo da conta pocket.
        suffix:
          type: string
          description: "Sufixo atribuído ao número da pocket. Exemplo: BRL."
        currency:
          type: string
          description: Sigla da moeda corrente da pocket.
        type:
          type: string
          description: "Tipo da conta com a sigla da moeda. Exemplo: POCKET_BRL."
        status:
          type: string
          description: Situação da conta pocket.
        reason:
          type: string
          description: Motivo da situação da conta pocket. Nesse caso, sempre será HOLDER_REQUEST.
        category:
          type: string
          description: Categoria da conta.
        useCase:
          type: string
          description: "Motivo de uso da conta pocket, que pode ser: “ACCOUNT_FOR_UNDER_AGE” (Conta para menor de idade), “CORPORATE_EXPENSES” (Despesas corporativas), “FLEXIBLE_BENEFITS” (Benefícios flexíveis) e “BALANCE_SEGREGATION” (Segregação de saldo)."
        createdAt:
          type: string
          description: Data de criação da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        updatedAt:
          type: string
          description: Data de atualização da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        user:
          $ref: "#/components/schemas/User"
      additionalProperties: false

    GetPocketBalanceResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/BalanceMap"
        links:
          type: array
          items: { $ref: "#/components/schemas/Link" }
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties: { type: object, additionalProperties: false }
          nullable: true
      additionalProperties: false

    IAmount:
      type: object
      properties:
        value:
          type: number
          format: double
          description: Valor da moeda.
          readOnly: true
        currency:
          type: string
          description: Sigla da moeda utilizada, de acordo com a ISO 4217.
      additionalProperties: false

    BalanceMap:
      type: object
      properties:
        total:
          $ref: "#/components/schemas/IAmount"
        available:
          $ref: "#/components/schemas/IAmount"
        hold:
          $ref: "#/components/schemas/IAmount"
      additionalProperties: false

    AccountRequest:
      type: object
      properties:
        branch:
          type: string
          nullable: true
        number:
          type: string
          nullable: true
      additionalProperties: false

    Amount:
      required:
        - currency
        - value
      type: object
      properties:
        currency:
          minLength: 1
          type: string
        value:
          minimum: 0
          exclusiveMinimum: true
          minLength: 1
          type: number
          format: double
      additionalProperties: false

    Bank:
      type: object
      properties:
        ispb:
          type: string
          description: ISPB (Identificador de Sistema de Pagamentos Brasileiro) do banco.
        code:
          type: string
          description: Código do banco.
        name:
          type: string
          description: Nome do banco.

    HolderCompleteResponse:
      type: object
      properties:
        document:
          $ref: "#/components/schemas/Document"
        type:
          type: string
          description: Tipo do cadastro do titular da conta de pagamento (“CUSTOMER” ou “BUSINESS”).
        name:
          type: string
          description: Nome do titular da conta de pagamento.
        status:
          type: string
          description: Situação do cadastro do titular.
        createdAt:
          type: string
          description: Data de criação do cadastro do titular no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
      additionalProperties: false

    AccountCompleteResponse:
      type: object
      properties:
        branch:
          type: string
          description: Número da agência da conta de pagamento à qual a conta pocket está atrelada.
        number:
          type: string
          description: Número da conta de pagamento.
        status:
          type: string
          description: Situação da conta de pagamento que, nesse caso, será “ACTIVE”.
        reason:
          type: string
          description: Motivo da situação da conta de pagamento.
        createdAt:
          type: string
          description: Data de criação da conta de pagamento, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        bank:
          $ref: "#/components/schemas/Bank"
        holder:
          $ref: "#components/schemas/HolderCompleteResponse"
      additionalProperties: false

    CreatePocketCompleteResponseDto:
      type: object
      properties:
        number:
          type: string
          description: Número da conta pocket.
        label:
          type: string
          description: Nome descritivo da conta pocket.
        suffix:
          type: string
          description: "Sufixo atribuído ao número da pocket. Exemplo: BRL."
        currency:
          type: string
          description: Sigla da moeda corrente da pocket.
        type:
          type: string
          description: "Tipo da conta com a sigla da moeda. Exemplo: POCKET_BRL."
        status:
          type: string
          description: "Situação da conta pocket, que pode ser: ACTIVE, DORMANT, LOCKED e CLOSED."
        reason:
          type: string
          description: Motivo da situação da conta pocket. Nesse caso, sempre será HOLDER_REQUEST.
        category:
          type: string
          description: Categoria da conta.
        useCase:
          type: string
          description: "Especificação da finalidade da pocket, que pode ser: “ACCOUNT_FOR_UNDER_AGE” (Conta para menor de idade), “CORPORATE_EXPENSES” (Despesas corporativas), “FLEXIBLE_BENEFITS” (Benefícios flexíveis) e “BALANCE_SEGREGATION” (Segregação de saldo)."
        createdAt:
          type: string
          description: Data de criação da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        user:
          $ref: "#/components/schemas/User"
        account:
          $ref: "#/components/schemas/AccountCompleteResponse"
      additionalProperties: false

    ChangingUserResponseData:
      type: object
      properties:
        number:
          type: string
          description: Número da conta pocket.
        label:
          type: string
          description: Nome descritivo da conta pocket.
        suffix:
          type: string
          description: "Sufixo atribuído ao número da pocket. Exemplo: BRL."
        currency:
          type: string
          description: Sigla da moeda corrente da pocket.
        type:
          type: string
          description: "Tipo da conta com a sigla da moeda. Exemplo: POCKET_BRL."
        status:
          type: string
          description: "Situação da conta pocket, que pode ser: ACTIVE, DORMANT, LOCKED e CLOSED."
        reason:
          type: string
          description: Motivo da situação da conta pocket. Nesse caso, sempre será HOLDER_REQUEST.
        category:
          type: string
          description: Categoria da conta.
        useCase:
          type: string
          description: "Especificação da finalidade da pocket, que pode ser: “ACCOUNT_FOR_UNDER_AGE” (Conta para menor de idade), “CORPORATE_EXPENSES” (Despesas corporativas), “FLEXIBLE_BENEFITS” (Benefícios flexíveis) e “BALANCE_SEGREGATION” (Segregação de saldo)."
        createdAt:
          type: string
          description: Data de criação da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        updateddAt:
          type: string
          description: Data de atualizaçã da conta pocket, no formato yyyy-MM-dd'T'HH:mm:ss.SSS.
        user:
          $ref: "#/components/schemas/User"
        account:
          $ref: "#/components/schemas/AccountCompleteResponse"

    PocketBasicResponseDto:
      type: object
      properties:
        label:
          type: string
          description: Nome da pocket criada.
          nullable: true
        type:
          type: string
          description: Tipo da conta e sigla da moeda utilizada.
          nullable: true
        number:
          type: string
          description: Número da conta pocket.
          nullable: true
        currency:
          type: string
          description: Sigla da moeda utilizada, de acordo com a ISO 4217.
          nullable: true
        status:
          $ref: "#/components/schemas/Status"
        createdAt:
          type: string
          description: Data de criação da pocket.
          format: date-time
        updatedAt:
          type: string
          description: Data da última atualização do status de criação.
          format: date-time
      additionalProperties: false

    Description:
      type: string
      nullable: true
      description: Texto que descreve o propósito da transação.
      additionalProperties: false

    Link:
      type: object
      properties:
        url:
          type: string
          nullable: true
        rel:
          type: string
          nullable: true
        method:
          type: string
          nullable: true
      additionalProperties: false

    ClosureReason:
      enum:
        - HOLDER_REQUEST
        - COMMERCIAL_DISAGREEMENT
      type: string
      description: Motivo da solicitação de cancelamento. Neste momento só é permitido HOLDER_REQUEST e COMMERCIAL_DISAGREEMENT.

    PocketAccountClosureRequest:
      type: object
      properties:
        reason:
          $ref: "#/components/schemas/ClosureReason"
      additionalProperties: false

    PocketAccountClosureRequestRequest:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketAccountClosureRequest"
        metadata:
          type: object
          additionalProperties: { type: object, additionalProperties: false }
          nullable: true
      additionalProperties: false

    PocketTransactionResponse:
      type: object
      properties:
        data:
          $ref: "#/components/schemas/PocketTransactionResponseData"
        links:
          type: array
          items:
            $ref: "#/components/schemas/Link"
          nullable: true
          readOnly: true
        metadata:
          type: object
          additionalProperties:
            type: object
            additionalProperties: false
          nullable: true
      additionalProperties: false

    PocketTransactionResponseData:
      type: object
      properties:
        authenticationCode:
          type: string
          nullable: false
          description: Código identificador da transação em formato GUID.
        amount:
          $ref: "#/components/schemas/IAmount"
        pocket:
          type: object
          properties:
            number:
              type: string
              nullable: false
              description: Número da conta pocket.
            status:
              $ref: "#/components/schemas/Status"
            account:
              type: object
              properties:
                branch:
                  type: string
                  nullable: false
                  description: Número da agência bancária.
                number:
                  type: string
                  nullable: false
                  description: Número da conta de pagamento.
                status:
                  $ref: "#/components/schemas/Status"
                bank:
                  $ref: "#/components/schemas/Bank"
                holder:
                  $ref: "#/components/schemas/HolderResponseDepRed"
        type:
          type: string
          description: Tipo de transação da pocket (SAVING para depósito e REDEEM para resgate).
        status:
          $ref: "#/components/schemas/PocketTransactionStatus"
        createdAt:
          type: string
          description: Data de criação da transação.
          format: date-time
        updatedAt:
          type: string
          description: Data de atualização da transação.
          format: date-time
        description:
          $ref: "#/components/schemas/Description"

    PocketTransactionStatus:
      enum:
        - CREATED
        - IN_PROCESS
        - DONE
        - UNDONE
        - ERROR
      type: string
      description: Situação da transação.

    Error:
      $ref: http://localhost:3320/commons/components#/components/schemas/ErrorResponse

    ErrorResponse:
      $ref: http://localhost:3320/commons/components#/components/schemas/Error

    Balance:
      description: Saldo da conta.
      type: object
      properties:
        amount:
          description: |
            Valor em decimal. Ex: 1.00.
          type: number
          format: double
        currency:
          description: |
            Moeda corrente. _Default: *BRL*_
          type: string
      additionalProperties: false

    BalanceTotal:
      description: Saldo da conta.
      type: object
      properties:
        total:
          type: object
          properties:
            value:
              description: Valor total do saldo.
              type: number
            currency:
              description: Sigla da moeda do saldo, de acordo com a ISO 4217.
              type: string
      additionalProperties: false

    SummarizedBalance:
      description: Saldo sumarizado da conta.
      type: object
      properties:
        inProcess:
          description: Saldo em processamento _(cash in)_.
          $ref: "#/components/schemas/Balance"
        available:
          description: Saldo disponível.
          $ref: "#/components/schemas/Balance"
        blocked:
          description: Saldo em bloqueio judicial.
          $ref: "#/components/schemas/Balance"
      additionalProperties: false

    AccountStatus:
      type: string
      description: Status da conta, que pode ser ACTIVE ou CLOSED.

    AccountType:
      type: string
      description: |
        Tipo da conta a ser criada. 
        _Default: **PAYMENT_ACCOUNT**_.
      default: PAYMENT_ACCOUNT
      enum:
        - PAYMENT_ACCOUNT

    CreateAccountRequest:
      type: object
      properties:
        accountType:
          $ref: "#/components/schemas/AccountType"
      additionalProperties: false

    Account:
      type: object
      properties:
        branch:
          type: string
          nullable: true
          description: Número da agência bancária.
        number:
          type: string
          nullable: true
          description: Número da conta.
      additionalProperties: false

    Income:
      type: object
      properties:
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false

    IncomeBalance:
      type: object
      properties:
        year:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        currency:
          type: string
          nullable: true
      additionalProperties: false

    Holder:
      type: object
      properties:
        name:
          type: string
          nullable: true
        documentNumber:
          type: string
          nullable: true
      additionalProperties: false

    HolderResponseDepRed:
      type: object
      properties:
        document:
          $ref: "#/components/schemas/Document"
        type:
          type: string
          description: Tipo do cadastro do titular da conta de pagamento (“CUSTOMER” ou “BUSINESS”).
        name:
          type: string
          description: Nome do titular da conta de pagamento.
      additionalProperties: false

    AccountBasicResponse:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/AccountStatus"
        branch:
          $ref: "http://localhost:3320/commons/components#/components/schemas/BankBranch"
        number:
          $ref: "http://localhost:3320/commons/components#/components/schemas/AccountNumber"
        type:
          description: Tipo de conta.
          type: string
          enum:
            - checking
            - payment
        bank:
          description: Objeto que contém os dados bancários da conta.
          $ref: "#/components/schemas/Bank"
        programId:
          description: Identificador do programa de contas que determina o tipo de conta.
          type: string
      additionalProperties: false

    AccountDetailedResponse:
      type: object
      properties:
        balance:
          $ref: "#/components/schemas/SummarizedBalance"
        status:
          $ref: "#/components/schemas/AccountStatus"
        branch:
          $ref: "http://localhost:3320/commons/components#/components/schemas/BankBranch"
        number:
          $ref: "http://localhost:3320/commons/components#/components/schemas/AccountNumber"
        type:
          description: Tipo de conta.
          type: string
          enum:
            - checking
            - payment
        bank:
          description: Objeto que contém os dados bancários da conta.
          $ref: "#/components/schemas/Bank"
        programId:
          description: Identificador do programa de contas que determina o tipo de conta.
          type: string
        
      additionalProperties: false

    AccountDetailedResponsePost:
      type: object
      properties:
        balance:
          $ref: "#/components/schemas/SummarizedBalance"
        status:
          $ref: "#/components/schemas/AccountStatus"
        branch:
          $ref: "http://localhost:3320/commons/components#/components/schemas/BankBranch"
        number:
          $ref: "http://localhost:3320/commons/components#/components/schemas/AccountNumber"

    ReasonType:
      type: string
      description: |
        Motivo do encerramento. 
        _Default: **HOLDER_REQUEST**_.
      default: HOLDER_REQUEST
      enum:
        - HOLDER_REQUEST
        - COMMERCIAL_DISAGREEMENT

    ClosureRequest:
      type: object
      properties:
        reason:
          $ref: "#/components/schemas/ReasonType"
      additionalProperties: false

    BalanceResponse:
      type: object
      properties:
        available:
          type: object
          description: "Objeto que contém informações sobre o saldo disponível na conta. <b>Somente</b> será retornado na consulta padrão de saldo (Type: <code>default</code>)."
          properties:
            value:
              type: number
              description: Valor do saldo disponível.
            currency:
              type: string
              description: Código da moeda com base na ISO 4217.
        hold:
          type: object
          description: "Objeto que contém informações sobre o saldo em processamento. <b>Somente</b> será retornado na consulta padrão de saldo (Type: <code>default</code>)."
          properties:
            value:
              type: number
              description: Valor do saldo em processamento.
            currency:
              type: string
              description: Código da moeda com base na ISO 4217.
        blocked:
          type: object
          description: "Objeto que contém informações sobre o saldo bloqueado na conta. <b>Somente</b> será retornado na consulta de saldo bloqueado (Type: <code>blocked</code>)."
          properties:
            value:
              type: number
              description: Valor do saldo bloqueado.
            currency:
              type: string
              description: Código da moeda com base na ISO 4217.
        residual:
          type: object
          description: "Objeto que contém informações sobre o saldo remanescente. <b>Somente</b> será retornado na consulta de saldo remanescente (Type: <code>residual</code>)."
          properties:
            value:
              type: number
              description: Valor do saldo remanescente.
            currency:
              type: string
              description: Código da moeda com base na ISO 4217.

    CreateBalanceBlockRequest:
      type: object
      required:
        - amount
        - channel
      properties:
        amount:
          type: object
          description: Objeto contendo os dados relativos ao valor de bloqueio.
          required:
            - value
            - currency
          properties:
            value:
              type: number
              description: Valor a ser bloqueado.
            currency:
              type: string
              description: Sigla da moeda utilizada, de acordo com a ISO 4217. Atualmente, só é possível informar BRL.
        channel:
          type: object
          description: Objeto contendo os dados relativos ao bloqueio.
          required:
            - name
            - order
          properties:
            name:
              type: string
              description: Nome do canal de bloqueio. Atualmente, só é possível informar JUDICIAL_BLOCK.
            order:
              type: object
              description: Obrigatório se o channel.name informado for JUDICIAL_BLOCK. Objeto contendo os dados relativos da ordem de bloqueio judicial.
              required:
                - issuer
                - number
                - protocol
                - lawsuit
              properties:
                issuer:
                  type: string
                  enum:
                    - OFP (Ofício em papel)
                    - BCC (Ofício BC Correio)
                    - CVM 
                    - BJ2 (Bacen Jud 2)
                  description: Órgão emissor da ordem judicial, o qual pode ser OFP (Ofício em papel), BCC (Ofício BC Correio), CVM, BJ2 (Bacen Jud 2).
                number:
                  type: string
                  description: Número do oficio.
                protocol:
                  type: string
                  description: Número do protocolo do oficio.
                lawsuit:
                  type: object
                  description: Objeto contendo os dados do processo judicial.
                  required:
                    - number
                    - type
                  properties:
                    number:
                      type: string
                      description: Número do processo judicial.
                    type:
                      type: string
                      description: Tipo do processo judicial.

    CreateBalanceBlockResponse:
      type: object
      properties:
        authenticationCode:
          type: string
          description: Código de autenticação da operação de bloqueio.
        amount:
          type: object
          description: Objeto contendo os dados relativos ao valor a ser bloqueado.
          properties:
            value:
              type: number
              description: Valor a ser bloqueado.
            currency:
              type: string
              description: Sigla da moeda utilizada, de acordo com a ISO 4217. 
        blockedAmount:
          type: object
          description: Objeto contendo os dados relativos ao valor que foi efetivamente bloqueado.
          properties:
            value:
              type: number
              description: Valor bloqueado.
            currency:
              type: string
              description: Sigla da moeda utilizada, de acordo com a ISO 4217.
        account: 
          type: object
          description: Objeto contendo os dados relativos a conta na qual ocorreu o bloqueio de saldo.
          properties:
            branch:
              type: string
              description: Número da agência bancária.
            number:
              type: string
              description: Número da conta.
            bank:
              $ref: "#/components/schemas/Bank"
        channel:
          type: object
          description: Objeto contendo os dados relativos ao bloqueio.
          properties:
            name:
              type: string
              description: Nome do canal de bloqueio.
            order:
              type: object
              description: Objeto contendo os dados relativos da ordem de bloqueio judicial.
              properties:
                issuer:
                  type: string
                  enum:
                    - OFP (Ofício em papel)
                    - BCC (Ofício BC Correio)
                    - CVM 
                    - BJ2 (Bacen Jud 2)
                  description: Órgão emissor da ordem judicial, o qual pode ser OFP (Ofício em papel), BCC (Ofício BC Correio), CVM, BJ2 (Bacen Jud 2).
                number:
                  type: string
                  description: Número do oficio.
                protocol:
                  type: string
                  description: Número do protocolo do oficio.
                lawsuit:
                  type: object
                  description: Objeto contendo os dados do processo judicial.
                  properties:
                    number:
                      type: string
                      description: Número do processo judicial.
                    type:
                      type: string
                      description: Tipo do processo judicial.
        createdAt:
          type: string
          description: Data de criação do bloqueio de saldo, no formato YYYY-MM-DDTHH:mm:SS.

    QueryBalanceBlockResponse:
      type: object
      properties:
        authenticationCode:
          type: string
          description: Código de autenticação da operação de bloqueio.
        amount:
          type: object
          description: Objeto contendo os dados relativos ao valor a ser bloqueado.
          properties:
            value:
              type: number
              description: Valor a ser bloqueado.
            currency:
              type: string
              description: Sigla da moeda utilizada, de acordo com a ISO 4217. 
        blockedAmount:
          type: object
          description: Objeto contendo os dados relativos ao valor que foi efetivamente bloqueado.
          properties:
            value:
              type: number
              description: Valor bloqueado.
            currency:
              type: string
              description: Sigla da moeda utilizada, de acordo com a ISO 4217.
        account: 
          type: object
          description: Objeto contendo os dados relativos a conta na qual ocorreu o bloqueio de saldo.
          properties:
            branch:
              type: string
              description: Número da agência bancária.
            number:
              type: string
              description: Número da conta.
            bank:
              $ref: "#/components/schemas/Bank"
        channel:
          type: object
          description: Objeto contendo os dados relativos ao bloqueio.
          properties:
            name:
              type: string
              description: Nome do canal de bloqueio.
            order:
              type: object
              description: Objeto contendo os dados relativos da ordem de bloqueio judicial.
              properties:
                issuer:
                  type: string
                  enum:
                    - OFP (Ofício em papel)
                    - BCC (Ofício BC Correio)
                    - CVM 
                    - BJ2 (Bacen Jud 2)
                  description: Órgão emissor da ordem judicial, o qual pode ser OFP (Ofício em papel), BCC (Ofício BC Correio), CVM, BJ2 (Bacen Jud 2).
                number:
                  type: string
                  description: Número do oficio.
                protocol:
                  type: string
                  description: Número do protocolo do oficio.
                lawsuit:
                  type: object
                  description: Objeto contendo os dados do processo judicial.
                  properties:
                    number:
                      type: string
                      description: Número do processo judicial.
                    type:
                      type: string
                      description: Tipo do processo judicial.
        createdAt:
          type: string
          description: Data de criação do bloqueio de saldo, no formato YYYY-MM-DDTHH:mm:SS.
        updatedAt:
          type: string
          description: Data de atualização do bloqueio de saldo, no formato YYYY-MM-DDTHH:mm:SS. 

  examples:
    
    accountDetailedExample:
      value:
        balance:
          available:
            amount: 0.00
            currency: "BRL"
          inProcess:
            amount: 0.00
            currency: "BRL"
          blocked:
            amount: 0.00
            currency: "BRL"
        branch: "0001"
        number: "123456"
        status: "ACTIVE"
        type: "Checking"
        bank:
          ispb: "13140088" 
          code: "332"
          name: "Acesso Soluções De Pagamento SA - Instituição de Pagamento"
        programId: "d83c37b2-fb71-477c-b689-8ec95ab810c8"
      summary: Conta de pagamento com saldo

    balanceDefaultResponse:
      value:
        available:
          value: 100.00
          currency: "BRL"
        hold:
          value: 90.00
          currency: "BRL"
      summary: Consulta de saldo disponível e em processamento

    balanceBlockedResponse:
      value:
        blocked:
          value: 100.00
          currency: "BRL"
      summary: Consulta de saldo bloqueado

    balanceResidualResponse:
      value:
        residual:
          value: 100.00
          currency: "BRL"
      summary: Consulta de saldo remanescente

    accountDetailedExamplePost:
      value:
        balance:
          available:
            amount: 0.00
            currency: "BRL"
          inProcess:
            amount: 0.00
            currency: "BRL"
          blocked:
            amount: 0.00
            currency: "BRL"
        branch: "0001"
        number: "123456"
        status: "ACTIVE"
      summary: Conta de pagamento com saldo

    listOfAccounts:
      value:
        - number: "123456"
          branch: "0001"
          status: "ACTIVE"
          type: "Checking"
          bank:
            ispb: "13140088" 
            code: "332"
            name: "Acesso Soluções De Pagamento SA - Instituição de Pagamento"
          programId: "d93c37b2-fb71-477c-b689-8ec95ab810c8"
        - number: "123"
          branch: "0001"
          status: "CLOSED"
          type: "Payment"
          bank:
            ispb: "13140088" 
            code: "332"
            name: "Acesso Soluções De Pagamento SA - Instituição de Pagamento"
          programId: "d93c37b2-fb71-477c-b689-8ec95ab810c8"
      summary: Lista de contas de pagamento

    CreateBalanceJudicialBlockExample:
      value:
        authenticationCode: "ce8c0fe2-320c-4433-9c13-139d91627f6c"
        amount:
          value: 20.0
          currency: "BRL" 
        blockedAmount:
          value: 20.0
          currency: "BRL"
        account: 
          branch: "2020"
          number: "502000636779"
          bank:
            ispb: "01858774"
            code: "413"
            name: "BCO BV S.A."
        channel:
          name: "JUDICIAL_BLOCK"
          order:
            issuer: "BJ2"
            number: "0001103-32.2023.6.2.1625"
            protocol: "202306021628"
            lawsuit:
              number: "0001103-32.2023.6.2.1625"
              type: "Execução Fiscal"
        createdAt: "2023-06-20T15:49:46.5899092Z"
      summary: Criação de bloqueio judicial de saldo

    QueryBalanceJudicialBlockExample:
      value:
        authenticationCode: "ce8c0fe2-320c-4433-9c13-139d91627f6c"
        amount:
          value: 20.0
          currency: "BRL" 
        blockedAmount:
          value: 20.0
          currency: "BRL"
        account: 
          branch: "2020"
          number: "502000636779"
          bank:
            ispb: "01858774"
            code: "413"
            name: "BCO BV S.A."
        channel:
          name: "JUDICIAL_BLOCK"
          order:
            issuer: "BJ2"
            number: "0001103-32.2023.6.2.1625"
            protocol: "202306021628"
            lawsuit:
              number: "0001103-32.2023.6.2.1625"
              type: "Execução Fiscal"
        createdAt: "2023-05-20T15:49:46.5899092Z"
        updatedAt: "2023-06-20T15:49:46.5899092Z"
      summary: Consulta de bloqueio judicial de saldo
  
  securitySchemes:
    Bearer:
      type: http
      description: Inclua um token de autorização do tipo Bearer.
      scheme: bearer

x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
  samples-languages:
    - curl
